<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Player_idle_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>EffectedByGrav_par</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phy_fixed_rotation = true;
instance_create(x,y-32,PlayerArm_obj);
effected = true;

image_speed = .3;

State = 0;
/*
0 = Idle 
1 = Right Walk
2 = Left Walk
3 = Jump 
4 = Jump Right
5 = Jump Left
6 = Wall Jump Right
7 = Wall Jump Left
8 = Player Fall Right
9 = Player Fall Left
*/
MoveAction = 0;
/*
-1 = Jumping
0 = Grounded
1 = WallJumpR
2 = WallJumpL
3 = Mid Air
4 = Mid Air Cant Jump

*/

//location of the arm
XX = 0;
YY = -52;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///update location of player's arm and point char in right dir

PlayerArm_obj.x =  x+XX;

PlayerArm_obj.y =  y+YY;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controlls

//COLLISIONS

//check for collision under player
if ((physics_test_overlap(x,y+1,0,Solids_par) &amp;&amp; place_meeting(x,y+1,Solids_par))or (physics_test_overlap(x,y+1,0,EffectedByGrav_par) &amp;&amp; place_meeting(x,y+1,EffectedByGrav_par))) &amp;&amp; MoveAction != -1
{MoveAction = 0;}

//check for collision down and to the right of the player
/*if (MoveAction == 3) &amp;&amp; physics_test_overlap(x+1,y,0,Solids_par)
{MoveAction = 2}//wall jump to the left}*/

//check for collision down and to the left of the player
/*if (MoveAction == 3) &amp;&amp; physics_test_overlap(x-1,y,0,Solids_par)
{MoveAction = 1;}//wall jump to the right}*/


//MOVEMENT
//Up---------------------------------------------------------------
if (keyboard_check_pressed(ord('W')) &amp;&amp; (MoveAction == 0 or MoveAction == 3))
{ 
    if MoveAction == 0
    { MoveAction = -1; State = 3;YY = -32;}//normal jump
    else if MoveAction = 3
    {MoveAction = 4; phy_speed_y -= 7;State = 6;}//Double Jump
    /*else if MoveAction = 2
    {MoveAction = 4;keyboard_clear(ord('D'));phy_speed_y -= 9;State = 6;}//wall jump to the left*/
}

//Left-------------------------------------------------------------
if keyboard_check(ord('A')) &amp;&amp; !physics_test_overlap(x-5,y-1,0,Solids_par)
{
if phy_speed_x - 5 &gt; -6 {phy_speed_x -= 5;}
else
if phy_speed_x &gt; -6 {phy_speed_x -= 1;}

if MoveAction == 4
{State = 9;}
else if MoveAction == 3 
{State = 5;}
else
 if MoveAction == 0
{State = 2;}
}

//Right-------------------------------------------------------------
if keyboard_check(ord('D')) &amp;&amp; !physics_test_overlap(x+5,y-1,0,Solids_par)
{
if phy_speed_x + 5 &lt; 6 { phy_speed_x += 5;}
else
if phy_speed_x &lt; 6 { phy_speed_x += 1;}

if MoveAction == 4
{State = 8;}
else if MoveAction == 3 or MoveAction = 4
{State = 4;}
else
 if MoveAction == 0
{State = 1;}
}
//--------------------------------------------------------------------
if MoveAction = 0 &amp;&amp; !(keyboard_check(ord('D')) or keyboard_check(ord('A'))) 
{
State = 0;
}

if MoveAction == -1  
{
YY = -30;
if image_index &gt; 4
{
State = 0; phy_speed_y -= 8; MoveAction = 3;YY = -28;
}
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update Character Animations
switch (State)
{
case 0://Idle
sprite_index = Player_idle_spr; YY = -52; XX = 0;
break; 

case 1://walk right
sprite_index = Player_Walk_spr; image_xscale = 1; PlayerArm_obj.image_yscale = 1; YY = -48; XX = 0;
break;

case 2://walk left
sprite_index = Player_Walk_spr; image_xscale = -1; PlayerArm_obj.image_yscale = -1; YY = -48; XX = 0;
break;

case 3://jump 
sprite_index = Player_Jump_spr; 
break;

case 4://jump right
sprite_index = Player_Jump_Air_spr; image_xscale = 1; PlayerArm_obj.image_yscale = 1;
break;

case 5://jump left
sprite_index = Player_Jump_Air_spr; image_xscale = -1; PlayerArm_obj.image_yscale = -1;
break;

case 6://Double Jump
sprite_index = Player_Jump_Air_spr; YY = -52; XX = 0;
break;

case 7:

break;

case 8://Fall Right
sprite_index = Player_Fall_spr; image_xscale = 1; PlayerArm_obj.image_yscale = 1; YY = -36; XX = 0;
break;

case 9://Fall Left
sprite_index = Player_Fall_spr; image_xscale = -1; PlayerArm_obj.image_yscale = -1; YY = -36; XX = 0;
break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Activate second gravity source
var dist, pull, extrapull
pull = 2000;
Expull = 2000;

if instance_exists(Graviball)
{
    ix = instance_nearest(x,y,Graviball)
    dist = point_distance(x, y, ix.x, ix.y);
    if dist &gt; 0 extrapull = 100000/sqr(point_distance(x, y, ix.x, ix.y));
    if extrapull &gt; Expull extrapull = Expull
    
    if dist &lt; ix.radius
    {
        physics_apply_force(x, y,
                (pull+extrapull) * cos((point_direction(x, y, ix.x, ix.y)*(pi/180))),
                -(pull+extrapull) * sin((point_direction(x, y, ix.x, ix.y)*(pi/180))));
    }
}











</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Solids_par">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with Solids

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(50,50,string(phy_speed_x)+"x");
draw_text(50,75,string(phy_speed_y)+"y");

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
//left
draw_set_color(c_black);
draw_circle(x-27,y,5,false);

//right
draw_set_color(c_red);
draw_circle(x+27,y,5,false);





</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.0500000007450581</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.00999999977648258</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>50</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>30,0</point>
    <point>84,0</point>
    <point>84,178</point>
    <point>30,178</point>
  </PhysicsShapePoints>
</object>
