<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>BHBullet_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>EffectedByGrav_par</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
fix = physics_fixture_create();

physics_fixture_set_circle_shape(fix,16);
physics_fixture_set_density(fix,.3);
physics_fixture_set_restitution(fix,.4);
physics_fixture_set_collision_group(fix,0);
physics_fixture_set_linear_damping(fix,.2);
physics_fixture_set_angular_damping(fix,.1);
physics_fixture_set_friction(fix,.2);

physics_fixture_bind(fix,self);
physics_fixture_delete(fix);

phy_bullet = true;
effected = true;
col = 0;
oid = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Blackhole
//activate the gravity balls
var Bdist, Bpull, extraBpull
Bpull = 600;
ExBpull = 4000;

if instance_exists(BlackHole_obj)
{
    ix = instance_nearest(x,y,BlackHole_obj)
    Bdist = point_distance(x, y, ix.x, ix.y);
    if Bdist &gt; 0 extraBpull = 100000/sqr(point_distance(x, y, ix.x, ix.y));
    if extraBpull &gt; ExBpull extraBpull = ExBpull
    
    if Bdist &lt; ix.radius
    {
    //apply the force of the gravity field
        physics_apply_force(x, y,
                (Bpull+extraBpull) * cos((point_direction(x, y, ix.x, ix.y)*(pi/180))),
                -(Bpull+extraBpull) * sin((point_direction(x, y, ix.x, ix.y)*(pi/180))));
    }
  
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Whitehhole
var Wdist, Wpull, extraWpull
Wpull = -50;
ExWpull = -500;

if instance_exists(WhiteHole_obj)
{
    ix = instance_nearest(x,y,WhiteHole_obj)
    Wdist = point_distance(x, y, ix.x, ix.y);
    if Wdist &gt; 0 extraWpull = 100000/sqr(point_distance(x, y, ix.x, ix.y));
    if extraWpull &gt; ExWpull extraWpull = ExWpull
    
    if Wdist &lt; ix.radius
    {
    //apply the force of the gravity field
        physics_apply_force(x, y,
                (Wpull+extraWpull) * cos((point_direction(x, y, ix.x, ix.y)*(pi/180))),
                -(Wpull+extraWpull) * sin((point_direction(x, y, ix.x, ix.y)*(pi/180))));
    }

}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///collision stuff
if col == 1 &amp;&amp; !physics_test_overlap(phy_position_x,phy_position_y,0,oid)
{
col = 2;
}

if col == 2
{
oid.count -= 1;
col = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Explosion
var Edist, Epull, extraEpull
Epull = -20000;
ExEpull = -20000;

if instance_exists(Explosion_obj)
{
    ix = instance_nearest(x,y,Explosion_obj)
    Edist = point_distance(x, y, ix.x, ix.y);
    if Edist &gt; 0 extraEpull = 100000/sqr(point_distance(x, y, ix.x, ix.y));
    if extraEpull &gt; ExEpull extraEpull = ExEpull
    
    if Edist &lt; ix.radius
    {
    //apply the force of the gravity field
        physics_apply_force(x, y,
                (Epull+extraEpull) * cos((point_direction(x, y, ix.x, ix.y)*(pi/180))),
                -(Epull+extraEpull) * sin((point_direction(x, y, ix.x, ix.y)*(pi/180))));
    }
  
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Solids_par">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///collision
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="EffectedByGrav_par">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.300000011920929</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.400000005960464</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.200000002980232</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,0</point>
  </PhysicsShapePoints>
</object>
